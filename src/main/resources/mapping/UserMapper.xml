<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.UserMapper">

    <resultMap id="userResultMap" type="com.ssm.modelCustom.UserCustom">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="birth" column="birth"/>
        <result property="description" column="description"/>
        <result property="age" column="age"/>
        <result property="address" column="address"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>

        <collection property="posts" ofType="com.ssm.model.Post" column="post_author">
            <id column="post_id" jdbcType="INTEGER" property="postId" />
            <result column="post_name" jdbcType="VARCHAR" property="postName" />
            <result column="post_createtime" jdbcType="DATE" property="postCreatetime" />
            <result column="post_clicktimes" jdbcType="INTEGER" property="postClicktimes" />
            <result column="post_author" jdbcType="INTEGER" property="postAuthor" />
            <result column="post_category" jdbcType="VARCHAR" property="postCategory" />
            <result column="post_post" jdbcType="LONGVARCHAR" property="postPost" />
        </collection>

        <collection property="comments" ofType="com.ssm.model.Comment" column="comment_user">
            <id column="comment_id" jdbcType="INTEGER" property="commentId" />
            <result column="comment_createtime" jdbcType="DATE" property="commentCreatetime" />
            <result column="comment_post" jdbcType="INTEGER" property="commentPost" />
            <result column="comment_user" jdbcType="INTEGER" property="commentUser" />
            <result column="comment_comment" jdbcType="LONGVARCHAR" property="commentComment" />
        </collection>

    </resultMap>

    
    <select id="checkUserExist" resultType="com.ssm.modelCustom.UserExpand">
        SELECT * FROM user u WHERE u.name=#{name} AND u.password=#{password}
    </select>

    <update id="addPassValidatePhone">
        UPDATE user u SET u.phone=#{phone} WHERE u.id = #{id}
    </update>

    <select id="checkUsernameIsExist" parameterType="String" resultType="int">
        SELECT count(id) FROM user WHERE name=#{username}
    </select>

    <update id="updateUserHasCompleteFormation" parameterType="com.ssm.modelCustom.UserExpand">
        UPDATE user u SET
        u.name=#{user.name},u.phone=#{user.phone},u.email=#{user.email},u.password=#{user.password},u.birth=#{user.birth},
        u.description=#{user.description},u.age=#{user.age},u.address=#{user.address},u.headAddress=#{user.headAddress} WHERE u.id=#{user.id}
    </update>

    <!-- 更新用户在userbehavior表中的的行为信息 -->
    <update id="updateUserBehavior" parameterType="com.ssm.model.User">
        UPDATE userbehavior SET userHasCompleteFormation=1 WHERE userId=#{user.id}
    </update>

    <!-- 检查用户是否完善资料 -->
    <select id="checkUserHasCompleteFormation" parameterType="com.ssm.model.User" resultType="int">
        SELECT userHasCompleteFormation FROM userbehavior u WHERE u.userId=#{user.id}
    </select>

    <insert id="registeredUser">
        INSERT INTO user(name,password) VALUES (#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR})
    </insert>

    <select id="findUserByName" parameterType="java.lang.String" resultType="com.ssm.model.User">
        SELECT * FROM user WHERE name=#{name}
    </select>

    <insert id="registerUserBehavior" parameterType="com.ssm.model.User">
        INSERT INTO userbehavior(userId) VALUE (#{user.id})
    </insert>

    <select id="checkUserExistByPhone" resultType="int">
        SELECT count(id) FROM user u WHERE u.name=#{name} AND u.phone=#{phone}
    </select>

    <update id="addNewPassword">
        UPDATE user u SET u.password=#{password} WHERE u.name=#{name}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id=#{id}
    </delete>

    <delete id="deleteUserList">
        delete from user where id in (
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>



</mapper>